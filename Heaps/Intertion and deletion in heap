INTERTION AND DELETION IN HEAP



#include<iostream>
using namespace std;
class heap{
      public:
      int arr[100];
      int size;
      
      
      heap(){
          arr[0]=-1;
         size=0;   
      }
      void insert(int val){
            size=size+1;
            int index=size;
            arr[index]=val;
            while(index>1){
                 int  parent=index/2;
                  if(arr[parent]<arr[index]){
                        swap(arr[parent],arr[index]);
                        index=parent;
                  }
                  else{
                        return;
                  }
            }
      }
      void print(){
      for(int i=1;i<=size;i++){
            cout<<arr[i]<<" ";
      }cout<<endl;
      }
      void deleteheap(){
            if(size==0)
            return;
            
            arr[1]=arr[size];
            size--;
           int i=1;
            int left=2*i;
            int right=2*i+1;
            if(left<size && arr[1]<arr[left])
            swap(arr[1],arr[left]);
            if(right<size && arr[1]<arr[right])
            swap(arr[1],arr[right]);
            else
            return;
      }
};
 
int main(){
      heap h;
      h.insert(67);
      h.insert(34);
      h.insert(58);
      h.insert(98);
      h.print();
      h.deleteheap();
       h.deleteheap();
      
      h.print();
      return 0;
      
}
