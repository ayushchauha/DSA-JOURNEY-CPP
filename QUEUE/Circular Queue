https://www.codingninjas.com/codestudio/problems/circular-queue_1170058?leftPanelTab=0

Circular Queue



#include <bits/stdc++.h> 
class CircularQueue{
    int *arr;
    int front;
    int rear;
    int size;
    public:
    // Initialize your data structure.
    CircularQueue(int n){
        // Write your code here.
        size=n;
        arr=new int[size];
        front=rear=-1;
    }

    // Enqueues 'X' into the queue. Returns true if it gets pushed into the stack, and false otherwise.
    bool enqueue(int value){
        //case1 queue is full
        if((front==0 && rear==size-1) || (rear==(front-1)%(size-1))){
            return false;
        }
        //case 2 single element
        else if(front==-1){
            front=rear=0;
             arr[rear]=value;
        }
        //case3 rear at end
        else if(rear==(size-1) && front!=0){
            rear=0;
             arr[rear]=value;
        }
        //case 4 normal flow
        else{
            rear++;
             arr[rear]=value;
        }
       
        return true;
    }

    // Dequeues top element from queue. Returns -1 if the stack is empty, otherwise returns the popped element.
    int dequeue(){
        //case 1 empty
        if(front==-1){
            return -1;
        }
        //case2 single element
        int ans=arr[front];
        arr[front]=-1;
        if(front==rear){
            front=rear=-1;
        }
        //case 3 front at end of an array
        else if(front==size-1){
            front=0;
        }
        //case 4 normal flow
        else{
            front++;
        }
        return ans;
    }
};
